cur <- sample(nrow(transition), size = 1, prob = transition[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecount <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmat <- diag(1 / rowSums(ecount))
eprob <- dmat %*% ecount # empirical transitional probabilities
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
View(dmat1)
source("~/.active-rstudio-document", echo=TRUE)
# Define transition matrix
Rtransition <- matrix(0.083, nrow = 12, ncol = 12)
diag(Rtransition) <- 0.0
View(Rtransition)
# Define transition matrix
Rtransition <- matrix(0.083, nrow = 12, ncol = 12)
diag(Rtransition) <- 0.0
# Simulate sequence
n <- 32
rand_seq <- numeric(n)
cur <- sample(nrow(Rtransition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(Rtransition), size = 1, prob = Rtransition[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecountR <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmatR <- diag(1 / rowSums(ecount))
eprobR <- dmat %*% ecount # empirical transitional probabilities
View(eprobR)
# Define transition matrix
Rtransition <- matrix(0.083, nrow = 12, ncol = 12)
diag(Rtransition) <- 0.0
# Simulate sequence
n <- 32
rand_seq <- numeric(n)
cur <- sample(nrow(Rtransition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(Rtransition), size = 1, prob = Rtransition[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecountR <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmatR <- diag(1 / rowSums(ecountR))
eprobR <- dmatR %*% ecount # empirical transitional probabilities
View(eprobR)
# Define transition matrix
Rtransition <- matrix(0.083, nrow = 12, ncol = 12)
diag(Rtransition) <- 0.0
# Simulate sequence
n <- 32
rand_seq <- numeric(n)
cur <- sample(nrow(Rtransition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(Rtransition), size = 1, prob = Rtransition[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecountR <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmatR <- diag(1 / rowSums(ecountR))
eprobR <- dmatR %*% ecountR # empirical transitional probabilities
View(eprob)
View(eprobR)
View(eprobR)
View(dmatR)
# Define transition matrix
Rtransition <- matrix(0.083, nrow = 12, ncol = 12)
diag(Rtransition) <- 0.0
# Simulate sequence
n <- 32
rand_seq <- numeric(n)
cur <- sample(nrow(Rtransition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(Rtransition), size = 1, prob = Rtransition[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecountR <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmatR <- diag(1 / rowSums(ecountR))
eprobR <- dmatR %*% ecountR # empirical transitional probabilities
View(dmatR)
source("~/.active-rstudio-document")
q90
q()
# Define transition matrix
Rtransition <- matrix(0.083, nrow = 4, ncol = 4)
diag(Rtransition) <- 0.0
# Simulate sequence
n <- 32 # number of trials
rand_seq <- numeric(n)
cur <- sample(nrow(Rtransition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(Rtransition), size = 1, prob = Rtransition[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecountR <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmatR <- diag(1 / rowSums(ecountR))
eprobR <- dmatR %*% ecountR # empirical transitional probabilities
View(dmatR)
View(Rtransition)
Stransition <- matrix(0.25, nrow = 4, ncol = 4)
diag(Stransition) <- 1.00
View(Stransition)
source("~/.active-rstudio-document", echo=TRUE)
View(transition_matrix)
# Define transition matrix
Rtransition <- matrix(0.083, nrow = 4, ncol = 4)
diag(Rtransition) <- 0.00
# Simulate sequence
n <- 32 # number of trials
rand_seq <- numeric(n)
cur <- sample(nrow(Rtransition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(Rtransition), size = 1, prob = Rtransition[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecountR <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmatR <- diag(1 / rowSums(ecountR))
eprobR <- dmatR %*% ecountR # empirical transitional probabilities
# Transition matrix
Stransition <- matrix(0.25, nrow = 4, ncol = 4)
diag(Stransition) <- 0.00
# Simulate sequence
n <- 32 # number of trials
rand_seq <- numeric(n)
cur <- sample(nrow(Stransition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(Stransition), size = 1, prob = Stransition[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecountS <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmatS <- diag(1 / rowSums(ecountS))
eprobS <- dmatS %*% ecountS # empirical transitional probabilities
rm(lists=ls()
rm(lists=ls())
rm(lists=ls())
rm(list=ls())
clc
clear
# Transition matrix
Stransition <- matrix(0.25, nrow = 4, ncol = 4)
diag(Stransition) <- 0.00
# Simulate sequence
n <- 32 # number of trials
rand_seq <- numeric(n)
cur <- sample(nrow(Stransition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(Stransition), size = 1, prob = Stransition[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecountS <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmatS <- diag(1 / rowSums(ecountS))
eprobS <- dmatS %*% ecountS # empirical transitional probabilities
View(eprobS)
View(dmatS)
# Define transition matrix
Rtransition <- matrix(0.083, nrow = 12, ncol = 12)
diag(Rtransition) <- 0.00
# Simulate sequence
n <- 32 # number of trials
rand_seq <- numeric(n)
cur <- sample(nrow(Rtransition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(Rtransition), size = 1, prob = Rtransition[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecountR <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmatR <- diag(1 / rowSums(ecountR))
eprobR <- dmatR %*% ecountR # empirical transitional probabilities
View(eprobR)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
View(w)
View(X)
?expand_grid
rm(list=ls())
source("~/.active-rstudio-document", echo=TRUE)
View(X)
# Define transition matrix
Rtransition <- matrix(0.083, nrow = 12, ncol = 12)
diag(Rtransition) <- 0.00
# Simulate sequence
n <- 32 # number of trials
rand_seq <- numeric(n)
cur <- sample(nrow(Rtransition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(Rtransition), size = 1, prob = Rtransition[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecountR <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmatR <- diag(1 / rowSums(ecountR))
eprobR <- dmatR %*% ecountR # empirical transitional probabilities
View(eprobR)
# Define transition matrix
Rtransition <- matrix((1/11), nrow = 12, ncol = 12)
diag(Rtransition) <- 0.00
# Simulate sequence
n <- 32 # number of trials
rand_seq <- numeric(n)
cur <- sample(nrow(Rtransition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(Rtransition), size = 1, prob = Rtransition[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecountR <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmatR <- diag(1 / rowSums(ecountR))
eprobR <- dmatR %*% ecountR # empirical transitional probabilities
# Transition matrix
Stransition <- matrix((1/3), nrow = 4, ncol = 4)
diag(Stransition) <- 0.00
# Simulate sequence
n <- 32 # number of trials
rand_seq <- numeric(n)
cur <- sample(nrow(Stransition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(Stransition), size = 1, prob = Stransition[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecountS <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmatS <- diag(1 / rowSums(ecountS))
eprobS <- dmatS %*% ecountS # empirical transitional probabilities
# Transition matrix
Stransition <- matrix((1/3), nrow = 12, ncol = 12)
diag(Stransition) <- 0.00
# Simulate sequence
n <- 32 # number of trials
rand_seq <- numeric(n)
cur <- sample(nrow(Stransition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(Stransition), size = 1, prob = Stransition[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecountS <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmatS <- diag(1 / rowSums(ecountS))
eprobS <- dmatS %*% ecountS # empirical transitional probabilities
View(eprobR)
# Transition matrix
Stransition <- matrix((1/3), nrow = 12, ncol = 12)
diag(Stransition) <- 0.00
# Simulate sequence
n <- 32 # number of trials
rand_seq <- numeric(n)
cur <- sample(nrow(Stransition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(Stransition), size = 1, prob = Stransition[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecountS <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmatS <- diag(1 / rowSums(ecountS))
eprobS <- dmatS %*% ecountS # empirical transitional probabilities
View(eprobS)
source("~/.active-rstudio-document", echo=TRUE)
rm(list=ls())
clc
source("~/.active-rstudio-document", echo=TRUE)
View(X)
rm(list=ls())
source("~/.active-rstudio-document", echo=TRUE)
View(X)
source("~/.active-rstudio-document", echo=TRUE)
rm(list=ls())
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
eprobS <- dmatS %*% ecountS # empirical transitional probabilities
dmatS <- diag(1 / rowSums(ecountS))
eprobS <- dmatS %*% ecountS # empirical transitional probabilities
View(eprobS)
View(eprobS)
View(X)
# Transition matrix
Stransition <- matrix((1/4), nrow = 12, ncol = 12)
diag(Stransition) <- 0.00
# Simulate sequence
n <- 32 # number of trials
rand_seq <- numeric(n)
cur <- sample(nrow(Stransition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(Stransition), size = 1, prob = Stransition[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecountS <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmatS <- diag(1 / rowSums(ecountS))
eprobS <- dmatS %*% ecountS # empirical transitional probabilities
View(eprobS)
View(Stransition)
?expand_grid
?unite
# Create the grid of words and syllables
w <- expand_grid(word = 1:4, syl = 1:3) %>% unite(label, word, syl, sep = "_")
# Create the matrix X with zeros
X <- matrix(0, nrow = nrow(w), ncol = nrow(w), dimnames = list(w$label, w$label))
# Set specific values in the matrix X
for(i in 1:4) {
for(j in 1:3) {
if(j < 3) {
X[paste0(i, "_", j), paste0(i, "_", j + 1)] <- 1
} else {
X[paste0(i, "_", j), paste0(i %% 4 + 1, "_", 1)] <- 0.25
X[paste0(i, "_", j), paste0((i + 1) %% 4 + 1, "_", 1)] <- 0.25
X[paste0(i, "_", j), paste0((i + 2) %% 4 + 1, "_", 1)] <- 0.25
X[paste0(i, "_", j), paste0((i + 3) %% 4 + 1, "_", 1)] <- 0.25
}
}
}
X
source("~/.active-rstudio-document", echo=TRUE)
View(y)
# Create the grid of words and syllables
w <- expand_grid(word = 1:4, syl = 1:3) %>% unite(label, word, syl, sep = "_")
# Create the matrix X with zeros
X <- matrix(0, nrow = nrow(w), ncol = nrow(w), dimnames = list(w$label, w$label))
# Set specific values in the matrix X
for(i in 1:4) {
for(j in 1:3) {
if(j < 3) {
X[paste0(i, "_", j), paste0(i, "_", j + 1)] <- 1
} else {
X[paste0(i, "_", j), paste0(i %% 4 + 1, "_", 1)] <- 0.25
X[paste0(i, "_", j), paste0((i + 1) %% 4 + 1, "_", 1)] <- 0.25
X[paste0(i, "_", j), paste0((i + 2) %% 4 + 1, "_", 1)] <- 0.25
X[paste0(i, "_", j), paste0((i + 3) %% 4 + 1, "_", 1)] <- 0.25
}
}
}
X
View(X)
source("~/.active-rstudio-document", echo=TRUE)
View(y)
rm(list=ls())
library(dplyr)
library(tidyr)
library(tibble)
w <- expand_grid(word = 1:4, syl = 1:3) %>% unite(label, word, syl, sep = "_")
X <- matrix(0, nrow = nrow(w), ncol = nrow(w), dimnames = list(w$label, w$label))
X["1_1", "1_2"] <- 1
X["1_2", "1_3"] <- 1
X["1_3", "1_1"] <- .25
X["1_3", "2_1"] <- .25
X["1_3", "3_1"] <- .25
X["1_3", "4_1"] <- .25
X["2_1", "2_2"] <- 1
X["2_2", "2_3"] <- 1
X["2_3", "2_1"] <- .25
X["2_3", "1_1"] <- .25
X["2_3", "3_1"] <- .25
X["2_3", "4_1"] <- .25
X["3_1", "3_2"] <- 1
X["3_2", "3_3"] <- 1
X["3_3", "3_1"] <- .25
X["3_3", "1_1"] <- .25
X["3_3", "2_1"] <- .25
X["3_3", "4_1"] <- .25
X["4_1", "4_2"] <- 1
X["4_2", "4_3"] <- 1
X["4_3", "4_1"] <- .25
X["4_3", "1_1"] <- .25
X["4_3", "2_1"] <- .25
X["4_3", "3_1"] <- .25
X
# Simulate sequence
n <- 32 # number of trials
rand_seq <- numeric(n)
cur <- sample(nrow(X), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(X), size = 1, prob = X[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecountS <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmatS <- diag(1 / rowSums(ecountS))
eprobS <- dmatS %*% ecountS # empirical transitional probabilities
# Simulate sequence
n <- 32 # number of trials
rand_seq <- numeric(n)
cur <- sample(nrow(X), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(X), size = 1, prob = X[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecountS <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmatS <- diag(1 / rowSums(ecountS))
eprobS <- dmatS %*% ecountS # empirical transitional probabilities
eprobS
View(eprobS)
library(dplyr)
library(tidyr)
library(tibble)
# initialize matrix
w <- expand_grid(word = 1:4, syl = 1:3) %>% unite(label, word, syl, sep = "_")
X <- matrix(0, nrow = nrow(w), ncol = nrow(w), dimnames = list(w$label, w$label))
X["1_1", "1_2"] <- 1
X["1_2", "1_3"] <- 1
X["1_3", "1_1"] <- .25
X["1_3", "2_1"] <- .25
X["1_3", "3_1"] <- .25
X["1_3", "4_1"] <- .25
X["2_1", "2_2"] <- 1
X["2_2", "2_3"] <- 1
X["2_3", "2_1"] <- .25
X["2_3", "1_1"] <- .25
X["2_3", "3_1"] <- .25
X["2_3", "4_1"] <- .25
X["3_1", "3_2"] <- 1
X["3_2", "3_3"] <- 1
X["3_3", "3_1"] <- .25
X["3_3", "1_1"] <- .25
X["3_3", "2_1"] <- .25
X["3_3", "4_1"] <- .25
X["4_1", "4_2"] <- 1
X["4_2", "4_3"] <- 1
X["4_3", "4_1"] <- .25
X["4_3", "1_1"] <- .25
X["4_3", "2_1"] <- .25
X["4_3", "3_1"] <- .25
X
# initialize matrix
w <- expand_grid(word = 1:4, syl = 1:3) %>% unite(label, word, syl, sep = "_")
X <- matrix(0, nrow = nrow(w), ncol = nrow(w), dimnames = list(w$label, w$label))
X["1_1", "1_2"] <- 1
X["1_2", "1_3"] <- 1
X["1_3", "1_1"] <- .25
X["1_3", "2_1"] <- .25
X["1_3", "3_1"] <- .25
X["1_3", "4_1"] <- .25
X["2_1", "2_2"] <- 1
X["2_2", "2_3"] <- 1
X["2_3", "2_1"] <- .25
X["2_3", "1_1"] <- .25
X["2_3", "3_1"] <- .25
X["2_3", "4_1"] <- .25
X["3_1", "3_2"] <- 1
X["3_2", "3_3"] <- 1
X["3_3", "3_1"] <- .25
X["3_3", "1_1"] <- .25
X["3_3", "2_1"] <- .25
X["3_3", "4_1"] <- .25
X["4_1", "4_2"] <- 1
X["4_2", "4_3"] <- 1
X["4_3", "4_1"] <- .25
X["4_3", "1_1"] <- .25
X["4_3", "2_1"] <- .25
X["4_3", "3_1"] <- .25
X
View(X)
?convolve
convolve(eprobS, eprobs, conj = TRUE, type = c("Circular"))
convolve(eprobS, eprobs, conj = TRUE, type = c("circular"))
eprobS
# Simulate sequence
n <- 32 # number of trials
rand_seq <- numeric(n)
cur <- sample(nrow(X), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(X), size = 1, prob = X[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecountS <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmatS <- diag(1 / rowSums(ecountS))
eprobS <- dmatS %*% ecountS # empirical transitional probabilities
eprobS
convolve(eprobS, eprobs, conj = TRUE, type = c("circular"))
# Simulate sequence
n <- 32 # number of trials
rand_seq <- numeric(n)
cur <- sample(nrow(X), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(X), size = 1, prob = X[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecountS <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmatS <- diag(1 / rowSums(ecountS))
eprobS <- dmatS %*% ecountS # empirical transitional probabilities
eprobS
convolve(eprobS, eprobS, conj = TRUE, type = c("circular"))
domainG <- convolve(eprobS, eprobS, conj = TRUE, type = c("circular"))
View(domainG)
