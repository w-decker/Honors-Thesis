P
X <- rbind(
c(1.00, 0.25, 0.25, 0.25),
c(0.25, 1.00, 0.25, 0.25),
c(0.25, 0.25, 1.00, 0.25),
c(0.25, 0.25, 0.25, 1.00),
)
X <- rbind(
c(1.00, 0.25, 0.25, 0.25),
c(0.25, 1.00, 0.25, 0.25),
c(0.25, 0.25, 1.00, 0.25),
c(0.25, 0.25, 0.25, 1.00)
)
View(X)
X <- rbind(
c(1.00, 0.25, 0.25, 0.25),
c(0.25, 1.00, 0.25, 0.25),
c(0.25, 0.25, 1.00, 0.25),
c(0.25, 0.25, 0.25, 1.00)
)
x <- c(1:12) # number of objects. In our case, sounds.
mat <- matrix(0, nrow = length(x), ncol = length(x)) # empty probability matrix
cur <- sample(x, size = 1) # choose which object is 'current object' or 'starting object'.
trials = numeric(100) # number of trials
# generate matrix
for (i in trials){
cur <- sample(x, size = 1, replace = FALSE, prob = X[cur, ])
trials[i + 1] <- cur
}
X <- matrix(c(1.00, 0.25, 0.25, 0.25,
0.25, 1.00, 0.25, 0.25,
0.25, 0.25, 1.00, 0.25,
0.25, 0.25, 0.25, 1.00), nrow = 4)
x <- 1:12 # number of objects. In our case, sounds.
mat <- matrix(0, nrow = length(x), ncol = length(x)) # empty probability matrix
cur <- sample(x, size = 1) # choose which object is 'current object' or 'starting object'.
trials <- numeric(100) # number of trials
# generate matrix
for (i in 1:length(trials)-1){
cur <- sample(x, size = 1, replace = TRUE, prob = X[cur, ])
trials[i + 1] <- cur
}
X <- matrix(c(1.00, 0.25, 0.25, 0.25,
0.25, 1.00, 0.25, 0.25,
0.25, 0.25, 1.00, 0.25,
0.25, 0.25, 0.25, 1.00), nrow = 4)
x <- 1:12 # number of objects. In our case, sounds.
mat <- matrix(0, nrow = length(x), ncol = length(x)) # empty probability matrix
cur <- sample(x, size = 1) # choose which object is 'current object' or 'starting object'.
trials <- numeric(100) # number of trials
# generate matrix
for (i in 1:(length(trials)-1)){
cur <- sample(1:nrow(X), size = 1, replace = TRUE, prob = X[cur, ])
trials[i + 1] <- cur
}
transition <- matrix(c(1.00, 0.25, 0.25, 0.25,
0.25, 1.00, 0.25, 0.25,
0.25, 0.25, 1.00, 0.25,
0.25, 0.25, 0.25, 1.00), nrow = 4)
View(transition)
transition <- matrix(c(1.00, 0.25, 0.25, 0.25,
0.25, 1.00, 0.25, 0.25,
0.25, 0.25, 1.00, 0.25,
0.25, 0.25, 0.25, 1.00), nrow = 4)
# Simulate sequence
n <- 1000
random_sequence <- numeric(n)
cur <- sample(nrow(X), size = 1)
random_sequence[1] <- cur
for (i in 2:length(random_sequence)) {
cur <- sample(nrow(X), size = 1, prob = X[cur, ])
random_sequence[i] <- cur
}
transition <- matrix(c(1.00, 0.25, 0.25, 0.25,
0.25, 1.00, 0.25, 0.25,
0.25, 0.25, 1.00, 0.25,
0.25, 0.25, 0.25, 1.00), nrow = 4)
# Simulate sequence
n <- 1000
random_sequence <- numeric(n)
cur <- sample(nrow(X), size = 1)
random_sequence[1] <- cur
for (i in 2:length(random_sequence)) {
cur <- sample(nrow(X), size = 1, prob = X[cur, ])
random_sequence[i] <- cur
}
# Summarize sequence
# ecount contains the empirical count of transitions
# eprob contains the empirical transitional probabilities
ecount <- table(random_sequence[1:(n - 1)], random_sequence[2:n])
dmat <- diag(1 / rowSums(ecount))
eprob <- dmat %*% ecount
View(dmat)
transition <- matrix(
c(1.00, 0.25, 0.25, 0.25,
0.25, 1.00, 0.25, 0.25,
0.25, 0.25, 1.00, 0.25,
0.25, 0.25, 0.25, 1.00),
nrow = 4)
View(transition)
transition <- matrix(
c(1.00, 0.25, 0.25, 0.25,
0.25, 1.00, 0.25, 0.25,
0.25, 0.25, 1.00, 0.25,
0.25, 0.25, 0.25, 1.00),
nrow = 4)
# Simulate sequence
n <- 32
random_sequence <- numeric(n)
cur <- sample(nrow(X), size = 1)
random_sequence[1] <- cur
for (i in 2:length(random_sequence)) {
cur <- sample(nrow(X), size = 1, prob = X[cur, ])
random_sequence[i] <- cur
}
# Summarize sequence
# ecount contains the empirical count of transitions
# eprob contains the empirical transitional probabilities
ecount <- table(random_sequence[1:(n - 1)], random_sequence[2:n])
dmat <- diag(1 / rowSums(ecount))
eprob <- dmat %*% ecount
View(dmat)
transition <- matrix(
c(1.00, 0.25, 0.25, 0.25,
0.25, 1.00, 0.25, 0.25,
0.25, 0.25, 1.00, 0.25,
0.25, 0.25, 0.25, 1.00),
nrow = 4)
# Simulate sequence
n <- 1000
random_sequence <- numeric(n)
cur <- sample(nrow(X), size = 1)
random_sequence[1] <- cur
for (i in 2:length(random_sequence)) {
cur <- sample(nrow(X), size = 1, prob = X[cur, ])
random_sequence[i] <- cur
}
# Summarize sequence
# ecount contains the empirical count of transitions
# eprob contains the empirical transitional probabilities
ecount <- table(random_sequence[1:(n - 1)], random_sequence[2:n])
dmat <- diag(1 / rowSums(ecount))
eprob <- dmat %*% ecount
View(dmat)
transition <- matrix(
c(1.00, 0.25, 0.25, 0.25,
0.25, 1.00, 0.25, 0.25,
0.25, 0.25, 1.00, 0.25,
0.25, 0.25, 0.25, 1.00),
nrow = 4)
# Simulate sequence
n <- 12
random_sequence <- numeric(n)
cur <- sample(nrow(X), size = 1)
random_sequence[1] <- cur
for (i in 2:length(random_sequence)) {
cur <- sample(nrow(X), size = 1, prob = X[cur, ])
random_sequence[i] <- cur
}
# Summarize sequence
# ecount contains the empirical count of transitions
# eprob contains the empirical transitional probabilities
ecount <- table(random_sequence[1:(n - 1)], random_sequence[2:n])
dmat <- diag(1 / rowSums(ecount))
eprob <- dmat %*% ecount
View(dmat)
transition <- matrix(
c(1.00, 0.25, 0.25, 0.25,
0.25, 1.00, 0.25, 0.25,
0.25, 0.25, 1.00, 0.25,
0.25, 0.25, 0.25, 1.00),
nrow = 4)
# Simulate sequence
n <- 12
random_sequence <- numeric(n)
cur <- sample(nrow(X), size = 1)
random_sequence[1] <- cur
for (i in 2:length(random_sequence)) {
cur <- sample(nrow(X), size = 1, prob = X[cur, ])
random_sequence[i] <- cur
}
# Summarize sequence
# ecount contains the empirical count of transitions
# eprob contains the empirical transitional probabilities
ecount <- table(random_sequence[1:(n - 1)], random_sequence[2:n])
dmat <- diag(1 / rowSums(ecount))
eprob <- dmat %*% ecount
transition <- matrix(
c(1.00, 0.25, 0.25, 0.25,
0.25, 1.00, 0.25, 0.25,
0.25, 0.25, 1.00, 0.25,
0.25, 0.25, 0.25, 1.00),
nrow = 4)
# Simulate sequence
n <- 12
random_sequence <- numeric(n)
cur <- sample(nrow(X), size = 1)
random_sequence[1] <- cur
for (i in 2:length(random_sequence)) {
cur <- sample(nrow(X), size = 1, prob = X[cur, ])
random_sequence[i] <- cur
}
# Summarize sequence
# ecount contains the empirical count of transitions
# eprob contains the empirical transitional probabilities
ecount <- table(random_sequence[1:(n - 1)], random_sequence[2:n])
dmat <- diag(1 / rowSums(ecount))
eprob <- dmat %*% ecount
View(dmat)
# Transition matrix
transition <- matrix(
c(1.00, 0.25, 0.25, 0.25,
0.25, 1.00, 0.25, 0.25,
0.25, 0.25, 1.00, 0.25,
0.25, 0.25, 0.25, 1.00),
nrow = 4)
# Simulate sequence
n <- 100
random_sequence <- numeric(n)
cur <- sample(nrow(X), size = 1)
random_sequence[1] <- cur
for (i in 2:length(random_sequence)) {
cur <- sample(nrow(X), size = 1, prob = X[cur, ])
random_sequence[i] <- cur
}
# Summarize sequence
# ecount contains the empirical count of transitions
# eprob contains the empirical transitional probabilities
ecount <- table(random_sequence[1:(n - 1)], random_sequence[2:n])
dmat <- diag(1 / rowSums(ecount))
eprob <- dmat %*% ecount
View(dmat)
# Transition matrix
transition <- matrix(
c(1.00, 0.25, 0.25, 0.25,
0.25, 1.00, 0.25, 0.25,
0.25, 0.25, 1.00, 0.25,
0.25, 0.25, 0.25, 1.00),
nrow = 4)
# Simulate sequence
n <- 32
rand_seq <- numeric(n)
cur <- sample(nrow(transition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(random_sequence)) {
cur <- sample(nrow(X), size = 1, prob = X[cur, ])
random_sequence[i] <- cur
}
# Summarize sequence
# ecount contains the empirical count of transitions
# eprob contains the empirical transitional probabilities
ecount <- table(random_sequence[1:(n - 1)], random_sequence[2:n])
dmat <- diag(1 / rowSums(ecount))
eprob <- dmat %*% ecount
View(dmat)
# Transition matrix
transition <- matrix(
c(1.00, 0.25, 0.25, 0.25,
0.25, 1.00, 0.25, 0.25,
0.25, 0.25, 1.00, 0.25,
0.25, 0.25, 0.25, 1.00),
nrow = 4)
# Simulate sequence
n <- 32
rand_seq <- numeric(n)
cur <- sample(transition, size = 1)
rand_seq[1] <- cur
for (i in 2:length(random_sequence)) {
cur <- sample(nrow(X), size = 1, prob = X[cur, ])
random_sequence[i] <- cur
}
# Transition matrix
transition <- matrix(
c(1.00, 0.25, 0.25, 0.25,
0.25, 1.00, 0.25, 0.25,
0.25, 0.25, 1.00, 0.25,
0.25, 0.25, 0.25, 1.00),
nrow = 4)
# Simulate sequence
n <- 32
rand_seq <- numeric(n)
cur <- sample(nrow(transition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(random_sequence)) {
cur <- sample(nrow(X), size = 1, prob = X[cur, ])
random_sequence[i] <- cur
}
# Summarize sequence
# ecount contains the empirical count of transitions
# eprob contains the empirical transitional probabilities
ecount <- table(random_sequence[1:(n - 1)], random_sequence[2:n])
dmat <- diag(1 / rowSums(ecount))
eprob <- dmat %*% ecount
# Transition matrix
transition <- matrix(
c(1.00, 0.25, 0.25, 0.25,
0.25, 1.00, 0.25, 0.25,
0.25, 0.25, 1.00, 0.25,
0.25, 0.25, 0.25, 1.00),
nrow = 4)
# Simulate sequence
n <- 32
rand_seq <- numeric(n)
cur <- sample(nrow(transition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(random_sequence)) {
cur <- sample(nrow(X), size = 1, prob = X[cur, ])
random_sequence[i] <- cur
}
# Summarize sequence
ecount <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmat <- diag(1 / rowSums(ecount))
eprob <- dmat %*% ecount # empirical transitional probabilities
View(dmat)
# Transition matrix
transition <- matrix(
c(1.00, 0.25, 0.25, 0.25,
0.25, 1.00, 0.25, 0.25,
0.25, 0.25, 1.00, 0.25,
0.25, 0.25, 0.25, 1.00),
nrow = 4)
# Simulate sequence
n <- 32
rand_seq <- numeric(n)
cur <- sample(nrow(transition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(random_sequence)) {
cur <- sample(nrow(X), size = 1, prob = X[cur, ])
random_sequence[i] <- cur
}
# Summarize sequence
ecount <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmat <- diag(1 / rowSums(ecount))
eprob <- dmat %*% ecount # empirical transitional probabilities
View(dmat)
rm(list=ls())
# Transition matrix
transition <- matrix(
c(1.00, 0.25, 0.25, 0.25,
0.25, 1.00, 0.25, 0.25,
0.25, 0.25, 1.00, 0.25,
0.25, 0.25, 0.25, 1.00),
nrow = 4)
# Simulate sequence
n <- 32
rand_seq <- numeric(n)
cur <- sample(nrow(transition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(X), size = 1, prob = X[cur, ])
rand_seq[i] <- cur
}
# Transition matrix
transition <- matrix(
c(1.00, 0.25, 0.25, 0.25,
0.25, 1.00, 0.25, 0.25,
0.25, 0.25, 1.00, 0.25,
0.25, 0.25, 0.25, 1.00),
nrow = 4)
# Simulate sequence
n <- 32
rand_seq <- numeric(n)
cur <- sample(nrow(transition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(transition), size = 1, prob = X[cur, ])
rand_seq[i] <- cur
}
# Transition matrix
transition <- matrix(
c(1.00, 0.25, 0.25, 0.25,
0.25, 1.00, 0.25, 0.25,
0.25, 0.25, 1.00, 0.25,
0.25, 0.25, 0.25, 1.00),
nrow = 4)
# Simulate sequence
n <- 32
rand_seq <- numeric(n)
cur <- sample(nrow(transition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(transition), size = 1, prob = transition[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecount <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmat <- diag(1 / rowSums(ecount))
eprob <- dmat %*% ecount # empirical transitional probabilities
View(dmat)
# Transition matrix
transition <- matrix(
c(1.00, 0.25, 0.25, 0.25,
0.25, 1.00, 0.25, 0.25,
0.25, 0.25, 1.00, 0.25,
0.25, 0.25, 0.25, 1.00),
nrow = 4)
# Simulate sequence
n <- 32
rand_seq <- numeric(n)
cur <- sample(nrow(transition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(transition), size = 1, prob = transition[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecount <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmat <- diag(1 / rowSums(ecount))
eprob <- dmat %*% ecount # empirical transitional probabilities
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
View(dmat1)
source("~/.active-rstudio-document", echo=TRUE)
# Define transition matrix
Rtransition <- matrix(0.083, nrow = 12, ncol = 12)
diag(Rtransition) <- 0.0
View(Rtransition)
# Define transition matrix
Rtransition <- matrix(0.083, nrow = 12, ncol = 12)
diag(Rtransition) <- 0.0
# Simulate sequence
n <- 32
rand_seq <- numeric(n)
cur <- sample(nrow(Rtransition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(Rtransition), size = 1, prob = Rtransition[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecountR <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmatR <- diag(1 / rowSums(ecount))
eprobR <- dmat %*% ecount # empirical transitional probabilities
View(eprobR)
# Define transition matrix
Rtransition <- matrix(0.083, nrow = 12, ncol = 12)
diag(Rtransition) <- 0.0
# Simulate sequence
n <- 32
rand_seq <- numeric(n)
cur <- sample(nrow(Rtransition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(Rtransition), size = 1, prob = Rtransition[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecountR <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmatR <- diag(1 / rowSums(ecountR))
eprobR <- dmatR %*% ecount # empirical transitional probabilities
View(eprobR)
# Define transition matrix
Rtransition <- matrix(0.083, nrow = 12, ncol = 12)
diag(Rtransition) <- 0.0
# Simulate sequence
n <- 32
rand_seq <- numeric(n)
cur <- sample(nrow(Rtransition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(Rtransition), size = 1, prob = Rtransition[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecountR <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmatR <- diag(1 / rowSums(ecountR))
eprobR <- dmatR %*% ecountR # empirical transitional probabilities
View(eprob)
View(eprobR)
View(eprobR)
View(dmatR)
# Define transition matrix
Rtransition <- matrix(0.083, nrow = 12, ncol = 12)
diag(Rtransition) <- 0.0
# Simulate sequence
n <- 32
rand_seq <- numeric(n)
cur <- sample(nrow(Rtransition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(Rtransition), size = 1, prob = Rtransition[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecountR <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmatR <- diag(1 / rowSums(ecountR))
eprobR <- dmatR %*% ecountR # empirical transitional probabilities
View(dmatR)
source("~/.active-rstudio-document")
q90
q()
# Define transition matrix
Rtransition <- matrix(0.083, nrow = 4, ncol = 4)
diag(Rtransition) <- 0.0
# Simulate sequence
n <- 32 # number of trials
rand_seq <- numeric(n)
cur <- sample(nrow(Rtransition), size = 1)
rand_seq[1] <- cur
for (i in 2:length(rand_seq)) {
cur <- sample(nrow(Rtransition), size = 1, prob = Rtransition[cur, ])
rand_seq[i] <- cur
}
# Summarize sequence
ecountR <- table(rand_seq[1:(n - 1)], rand_seq[2:n]) # empirical count of transitions
dmatR <- diag(1 / rowSums(ecountR))
eprobR <- dmatR %*% ecountR # empirical transitional probabilities
View(dmatR)
View(Rtransition)
Stransition <- matrix(0.25, nrow = 4, ncol = 4)
diag(Stransition) <- 1.00
View(Stransition)
